blueprint:
  name: Müllabhol-Erinnerung für AWTRIX
  description: Zeigt Erinnerungen auf AWTRIX für ausgewählte Müllabhol-Ereignisse am nächsten Tag an, mit stündlicher Abfrage
  domain: automation
  input:
    awtrix_device_id:
      name: AWTRIX Geräte-ID
      description: Die eindeutige ID des AWTRIX-Geräts (z. B. 95827d9ac7396dd8ae55a3b82a059499)
      default: "95827d9ac7396dd8ae55a3b82a059499"
    calendar_entity:
      name: Kalender-Entität
      description: Die Kalender-Entität, die die Müllabhol-Ereignisse enthält
      selector:
        entity:
          domain: calendar
    event_names:
      name: Ereignisnamen
      description: Komma-separierte Liste der zu überwachenden Ereignisnamen (z. B. Restmüll, Gelber Sack)
      default: "Restmüll, Gelber Sack, Papiermüll, Biomüll"
    icon_id:
      name: Icon-ID
      description: Die ID des Icons, das auf AWTRIX angezeigt wird
      default: "12345"
    text_color:
      name: Schriftfarbe
      description: Die Farbe des Textes in Hexadezimal (z. B. FFFFFF für Weiß)
      default: "FFFFFF"
    duration:
      name: Anzeigedauer
      description: Wie lange die Erinnerung angezeigt werden soll (in Sekunden)
      default: 3600
      selector:
        number:
          min: 1
          max: 86400
          step: 1

trigger:
  - platform: time_pattern
    hours: "/1"

action:
  - variables:
      event_names_list: "{{ event_names.split(',') | map('trim') | list }}"
      awtrix_topic: "awtrix/app/waste_reminder_{{ repeat.item | replace(' ', '_') }}_{{ awtrix_device_id }}"
  - service: calendar.get_events
    data:
      entity_id: !input calendar_entity
      start_time: '{{ (now() + timedelta(days=1)).replace(hour=0, minute=0, second=0).isoformat() }}'
      end_time: '{{ (now() + timedelta(days=2)).replace(hour=0, minute=0, second=0).isoformat() }}'
    response_variable: events
  - repeat:
      for_each: "{{ event_names_list }}"
      sequence:
        - condition: template
          value_template: >
            {{ events.events | selectattr('summary', 'eq', repeat.item) | list | count > 0 }}
        - service: mqtt.publish
          data:
            topic: "{{ awtrix_topic }}"
            payload: >
              {
                "text": "Mülltonne Rausstellen: {{ repeat.item }}",
                "icon": "{{ icon_id }}",
                "color": "{{ text_color }}",
                "duration": {{ duration }}
              }
